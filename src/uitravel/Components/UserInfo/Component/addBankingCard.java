/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uitravel.Components.UserInfo.Component;

import java.awt.Dimension;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import uitravel.Components.TextField;
import javax.smartcardio.*;

public class addBankingCard extends javax.swing.JPanel {

    /**
     * Creates new form addBankingCard
     */
    public addBankingCard() {
        initComponents();
        init();
    }
    private void init(){
        roundedPanel1.setPreferredSize(new Dimension(550, 60));
        addCover.setVisible(false);
        lblCancel.setVisible(false);
        txtDate= new TextField();
        txtDate.setInputVerifier(new DateInputVerifier());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundedPanel1 = new uitravel.Components.RoundedPanel();
        txtName = new javax.swing.JLabel();
        lblAdd = new javax.swing.JLabel();
        addCover = new javax.swing.JLayeredPane();
        textField1 = new uitravel.Components.TextField();
        txtDate = new uitravel.Components.TextField();
        textField3 = new uitravel.Components.TextField();
        textField4 = new uitravel.Components.TextField();
        lblCancel = new javax.swing.JLabel();

        setOpaque(false);

        roundedPanel1.setBackground(new java.awt.Color(255, 255, 255));
        roundedPanel1.setBorderColor(new java.awt.Color(204, 204, 204));
        roundedPanel1.setOpaque(false);
        roundedPanel1.setPreferredSize(new java.awt.Dimension(550, 178));
        roundedPanel1.setRadius(30);
        roundedPanel1.setWithBorder(true);

        txtName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtName.setText("Thêm tài khoản mới");

        lblAdd.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblAdd.setForeground(new java.awt.Color(0, 51, 204));
        lblAdd.setText("Thêm tài khoản");
        lblAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblAddMousePressed(evt);
            }
        });

        addCover.setPreferredSize(new java.awt.Dimension(524, 100));

        textField1.setLabelText("Mã số thẻ");

        txtDate.setLabelText("Thời hạn thẻ");

        textField3.setLabelText("Tên chủ thẻ");

        textField4.setLabelText("Mã CVC");

        addCover.setLayer(textField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addCover.setLayer(txtDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addCover.setLayer(textField3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addCover.setLayer(textField4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout addCoverLayout = new javax.swing.GroupLayout(addCover);
        addCover.setLayout(addCoverLayout);
        addCoverLayout.setHorizontalGroup(
            addCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoverLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        addCoverLayout.setVerticalGroup(
            addCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoverLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCancel.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblCancel.setForeground(new java.awt.Color(255, 0, 51));
        lblCancel.setText("Hủy");
        lblCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCancelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(roundedPanel1Layout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158)
                        .addComponent(lblCancel)
                        .addGap(71, 71, 71)
                        .addComponent(lblAdd)))
                .addContainerGap())
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdd)
                    .addComponent(txtName)
                    .addComponent(lblCancel))
                .addGap(18, 18, 18)
                .addComponent(addCover, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(roundedPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMousePressed
        if("Thêm tài khoản".equals(lblAdd.getText())){
            lblAdd.setText("Lưu tài khoản");
            addCover.setVisible(true);
            lblCancel.setVisible(true);
            roundedPanel1.setPreferredSize(new Dimension(550, 176));

        }
        else{
            lblAdd.setText("Thêm tài khoản");
            addCover.setVisible(false);
            lblCancel.setVisible(false);
            roundedPanel1.setPreferredSize(new Dimension(550, 60));
            checkValidCard();
        }
    }//GEN-LAST:event_lblAddMousePressed
    public void checkValidCard(){
      /*
        try {
            // Display the list of available terminals
            TerminalFactory factory = TerminalFactory.getDefault();
            List<CardTerminal> terminals = factory.terminals().list();
            System.out.println("Available card readers: " + terminals);

            // Use the first terminal
            CardTerminal terminal = terminals.get(0);

            // Connect to the card
            terminal.waitForCardPresent(0);
            Card card = terminal.connect("T=1");
            System.out.println("Card: " + card);

            // Send command APDU
            CardChannel channel = card.getBasicChannel();
            byte[] commandApdu = new byte[] {
                (byte) 0x00, // CLA
                (byte) 0xA4, // INS
                (byte) 0x04, // P1
                (byte) 0x00, // P2
                (byte) 0x07, // LC
                (byte) 0xA0, 0x00, 0x00, 0x00, 0x03, 0x10, 0x10 // AID
            };
            ResponseAPDU responseApdu = channel.transmit(new CommandAPDU(commandApdu));
            System.out.println("Response: " + byteArrayToHex(responseApdu.getBytes()));

            // Disconnect
            card.disconnect(false);

        } catch (CardException e) {
        }

        */    
    }
    private static String byteArrayToHex(byte[] byteArray) {
        StringBuilder hexString = new StringBuilder();
        for (byte b : byteArray) {
            String hex = Integer.toHexString(0xFF & b);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString().toUpperCase();
    }
    private void lblCancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMousePressed
        lblAdd.setText("Thêm tài khoản");
        addCover.setVisible(false);
        lblCancel.setVisible(false);
        roundedPanel1.setPreferredSize(new Dimension(550, 60));

    }//GEN-LAST:event_lblCancelMousePressed

    static class DateInputVerifier extends InputVerifier {
        private final Pattern datePattern = Pattern.compile("(0[1-9]|1[0-2])/\\d{4}");

        @Override
        public boolean verify(JComponent input) {
            JTextField textField = (JTextField) input;
            String text = textField.getText();
            return datePattern.matcher(text).matches();
        }

        @Override
        public boolean shouldYieldFocus(JComponent input) {
            boolean valid = verify(input);
            if (!valid) {
                JOptionPane.showMessageDialog(input, "Invalid date format. Please use MM/yyyy.",
                        "Invalid Input", JOptionPane.ERROR_MESSAGE);
            }
            return valid;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane addCover;
    private javax.swing.JLabel lblAdd;
    private javax.swing.JLabel lblCancel;
    private uitravel.Components.RoundedPanel roundedPanel1;
    private uitravel.Components.TextField textField1;
    private uitravel.Components.TextField textField3;
    private uitravel.Components.TextField textField4;
    private uitravel.Components.TextField txtDate;
    private javax.swing.JLabel txtName;
    // End of variables declaration//GEN-END:variables
}
